@apiUrl = http://localhost:3000/api

@accessToken = {{Login.response.body.$.payload.accessToken}}
@refreshToken = {{Login.response.body.$.payload.refreshToken}}

## Get запрос на домашюю страничку
GET  http://localhost:3000/ HTTP/1.1


### Получить список зарегистрированных пользователей
GET  {{apiUrl}}/users/ HTTP/1.1

### post запрос на регистрацию пользователя
POST {{apiUrl}}users HTTP/1.1
content-type: application/json 

{
    "email": "tarkov@gachi.com",
    "password": "password",
    "name": "Billy Harington"
}

### генерация токена, пользователь должен быть создан в базе
# @name Login
POST {{apiUrl}}/auth HTTP/1.1
Content-Type: application/json

{
    "email": "tarkov@gachi.com",
    "password": "password"
}
### генерация нового access токена через refresh токен
POST {{apiUrl}}/auth/refresh-token HTTP/1.1
Content-Type: application/json

{
    "refreshToken": "{{refreshToken}}"
}
### создание нового профиля с именем Testing для карты woods
POST {{apiUrl}}/map-profile/Testing HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{accessToken}}

{
    "map" : "1"
}
### получение профиля карты с именем Testing
GET {{apiUrl}}/map-profile/Testing HTTP/1.1
### get запрос на информацию о пользователе
GET http://localhost:3000/api/users/1


### delete запрос, удаления пользователя
DELETE http://localhost:3000/api/users/2 HTTP/1.1

### put запрос на изменение данных
PATCH http://localhost:3000/api/users/1
Content-Type: application/json

{
    "email": "marcos.henrique@toptal.com",
    "password": "sup3rS3cr3tPassw0rd!23",
    "name": "Marcoss1",
    "permissionLevel": 8
}
### Получить последнее пользовательское соглашение
GET http://localhost:3000/api/agreement HTTP/1.1
